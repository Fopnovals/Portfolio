!function(){"use strict";angular.module("canban",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngMessages","ngAria","ngResource","ui.router","ui.bootstrap","toastr"])}(),function(){"use strict";angular.module("canban").component("inProgressComponent",{templateUrl:"app/components/inprogress/inprogress.template.html",bindings:{inProgress:"<",editInProgressTask:"&",abortedTask:"&",moveToDone:"&"},controller:function(){this.edit=function(t){t.preventDefault();var s=angular.element(t.target);s.hide(),s.next().show(),s.parent().next().show()},this.save=function(t,s){var a=angular.element(t.target);a.hide(),a.prev().show(),a.parent().next().hide(),this.editInProgressTask({obj:s})},this.aborted=function(t){var s={status:"aborted",id:t};this.abortedTask({obj:s})},this.done=function(t){var s={status:"done",id:t};this.moveToDone({obj:s})}}})}(),function(){"use strict";angular.module("canban").component("doneComponent",{templateUrl:"app/components/done/done.template.html",bindings:{remove:"&",doneTasks:"<",removeDoneTask:"&"},controller:function(){this.removeTask=function(t){this.removeDoneTask({obj:{id:t}})}}})}(),function(){"use strict";angular.module("canban").component("addComponent",{templateUrl:"../app/components/add/add.template.html",bindings:{createTask:"&"},controller:function(){var t=this;t.show=!1,t.newTask={},t.showFieldInput=function(){t.show=!t.show},t.addTask=function(s){if(s.$valid){var a={task:s.task,priority:s.radio.value};t.show=!1,t.createTask({task:a})}}}})}(),function(){"use strict";angular.module("canban").component("doitComponent",{templateUrl:"app/components/doit/doit.template.html",bindings:{tasks:"<",editTask:"&",abortedTask:"&",moveInProgress:"&",dynamicFilter:"@"},controller:function(){this.edit=function(t){t.preventDefault();var s=angular.element(t.target);s.closest(".task").find(".task-description").attr({disabled:!1}).focus(),s.hide(),s.next().show(),s.parent(".buttons").next(".edit-priority").show()},this.save=function(t,s){var a=angular.element(t.target);a.closest(".task").find(".task-description").attr({disabled:!0}),a.hide(),a.prev().show(),a.parent(".buttons").next(".edit-priority").hide(),this.editTask({obj:s})},this.aborted=function(t){var s={status:"aborted",id:t};this.abortedTask({obj:s})},this.inProgress=function(t){this.moveInProgress({obj:{id:t}})}}})}(),function(){"use strict";angular.module("canban").component("abortedComponent",{templateUrl:"app/components/aborted/aborted.template.html",bindings:{remove:"&",abortedTasks:"<"},controller:function(){this.removeTask=function(t){this.remove({obj:{id:t}})}}})}(),function(){"use strict";function t(t){var s=this;s.tasks=t.tasks,s.abortedTasks=t.abortedTasks,s.inProgressTasks=t.inProgressTasks,s.doneTasks=t.doneTasks,s.maxID=t.maxID;var a=function(t){for(var s=[],a=[],e=[],o=0;o<t.length;o++)"hight"==t[o].priority?s.push(t[o]):"normal"==t[o].priority?a.push(t[o]):"low"==t[o].priority&&e.push(t[o]);return s.concat(a).concat(e)},e=function(t){t.sort(function(t,s){return t.milliseconds-s.milliseconds})};s.addTask=function(t){var o,n=new Date;s.maxID++,localStorage.setItem("maxID",s.maxID),o=s.tasks.length>0?s.maxID:0;var r={year:n.getFullYear()+"   ",month:n.getMonth()+".",date:n.getDate()+".",hours:n.getHours()+":",minutes:n.getMinutes()+":",seconds:n.getSeconds(),milliseconds:n.getTime(),text:t.task,priority:t.priority,status:"new",id:o};return s.tasks.push(r),e(s.tasks),s.tasks=a(s.tasks),s.tasks},s.editTask=function(t,o,n){for(var r=0;r<s.tasks.length;){if(s.tasks[r].id==t)return s.tasks[r].text=o,s.tasks[r].priority=n,e(s.tasks),s.tasks=a(s.tasks),s.tasks;r++}},s.storage=function(){var t=angular.toJson(s.tasks);localStorage.setItem("doitTasks",t)},s.setStorageAbortedTasks=function(){var t=angular.toJson(s.abortedTasks);localStorage.setItem("abortedTasks",t)},s.setStorageInProgressTasks=function(){var t=angular.toJson(s.inProgressTasks);localStorage.setItem("inProgressTasks",t)},s.setStorageDoneTasks=function(){var t=angular.toJson(s.doneTasks);localStorage.setItem("doneTasks",t)},s.abortTask=function(t){for(var o=0;o<s.tasks.length;){if(s.tasks[o].id==t.id)return s.abortedTasks.push(s.tasks[o]),s.tasks.splice(o,1),e(s.abortedTasks),s.abortedTasks=a(s.abortedTasks),s.abortedTasks;o++}},s.removeTask=function(t){for(var a=0;a<s.abortedTasks.length;){if(s.abortedTasks[a].id==t)return s.abortedTasks.splice(a,1),s.abortedTasks;a++}},s.moveInProgress=function(t){for(var o=0;o<s.tasks.length;){if(s.tasks[o].id==t)return s.tasks[o].status="in-progress",s.inProgressTasks.push(s.tasks[o]),s.tasks.splice(o,1),e(s.inProgressTasks),s.inProgressTasks=a(s.inProgressTasks),s.inProgressTasks;o++}},s.editInProgress=function(t){for(var o=0;o<s.inProgressTasks.length;){if(s.inProgressTasks[o].id==t.id)return s.inProgressTasks[o].priority=t.priority,e(s.inProgressTasks),s.inProgressTasks=a(s.inProgressTasks),s.inProgressTasks;o++}},s.abortInProgress=function(t){for(var o=0;o<s.inProgressTasks.length;){if(s.inProgressTasks[o].id==t.id)return s.inProgressTasks[o].status="aborted",s.abortedTasks.push(s.inProgressTasks[o]),s.inProgressTasks.splice(o,1),e(s.abortedTasks),s.abortedTasks=a(s.abortedTasks),s.abortedTasks;o++}},s.moveToDone=function(t){for(var o=0;o<s.inProgressTasks.length;){if(s.inProgressTasks[o].id==t.id)return s.inProgressTasks[o].status="done",s.doneTasks.push(s.inProgressTasks[o]),s.inProgressTasks.splice(o,1),e(s.doneTasks),s.doneTasks=a(s.doneTasks),s.doneTasks;o++}},s.removeDoneTask=function(t){for(var a=0;a<s.doneTasks.length;){if(s.doneTasks[a].id==t)return s.doneTasks.splice(a,1),s.doneTasks;a++}}}t.$inject=["$rootScope"],angular.module("canban").service("mainService",t)}(),function(){"use strict";angular.module("canban").component("mainComponent",{templateUrl:"app/main/main.template.html",controller:["mainService",function(t){this.tasks=t.tasks,this.abortedTasks=t.abortedTasks,this.inProgressTasks=t.inProgressTasks,this.doneTasks=t.doneTasks,this.createTask=function(s){this.tasks=t.addTask(s),t.storage()},this.editTask=function(s){this.tasks=t.editTask(s.id,s.text,s.priority),t.storage()},this.abortedTask=function(s){this.abortedTasks=t.abortTask(s),t.setStorageAbortedTasks(),t.storage()},this.removeTask=function(s){this.abortedTasks=t.removeTask(s.id),t.setStorageAbortedTasks()},this.moveInProgress=function(s){this.inProgressTasks=t.moveInProgress(s.id),t.storage(),t.setStorageInProgressTasks()},this.editInProgress=function(s){this.inProgressTasks=t.editInProgress(s),t.setStorageInProgressTasks()},this.abortInProgressTask=function(s){this.abortedTasks=t.abortInProgress(s),t.setStorageInProgressTasks(),t.setStorageAbortedTasks()},this.moveToDone=function(s){this.doneTasks=t.moveToDone(s),t.setStorageInProgressTasks(),t.setStorageDoneTasks()},this.removeDoneTask=function(s){this.doneTasks=t.removeDoneTask(s.id),t.setStorageDoneTasks()}}]})}(),function(){"use strict";function t(t){t.maxID=angular.fromJson(localStorage.getItem("maxID"))||-1,t.tasks=angular.fromJson(localStorage.getItem("doitTasks"))||[],t.inProgressTasks=angular.fromJson(localStorage.getItem("inProgressTasks"))||[],t.doneTasks=angular.fromJson(localStorage.getItem("doneTasks"))||[],t.abortedTasks=angular.fromJson(localStorage.getItem("abortedTasks"))||[],t.inProgressTasks=angular.fromJson(localStorage.getItem("inProgressTasks"))||[]}t.$inject=["$rootScope"],angular.module("canban").run(t)}(),function(){"use strict";function t(t,s){t.state("home",{url:"/",templateUrl:"app/main/main.html"}),s.otherwise("/")}t.$inject=["$stateProvider","$urlRouterProvider"],angular.module("canban").config(t)}(),function(){"use strict";angular.module("canban").constant("malarkey",malarkey).constant("moment",moment)}(),function(){"use strict";function t(t,s){t.debugEnabled(!0),s.allowHtml=!0,s.timeOut=3e3,s.positionClass="toast-top-right",s.preventDuplicates=!0,s.progressBar=!0}t.$inject=["$logProvider","toastrConfig"],angular.module("canban").config(t)}(),angular.module("canban").run(["$templateCache",function(t){t.put("app/main/main.html","<div class=container><main-component class=main></main-component></div>"),t.put("app/main/main.template.html","<doit-component class=one-column tasks=$ctrl.tasks edit-task=$ctrl.editTask(obj) move-in-progress=$ctrl.moveInProgress(obj) aborted-task=$ctrl.abortedTask(obj)></doit-component><in-progress-component class=one-column in-progress=$ctrl.inProgressTasks aborted-task=$ctrl.abortInProgressTask(obj) edit-in-progress-task=$ctrl.editInProgress(obj) move-to-done=$ctrl.moveToDone(obj)></in-progress-component><done-component class=one-column done-tasks=$ctrl.doneTasks remove-done-task=$ctrl.removeDoneTask(obj)></done-component><aborted-component class=one-column aborted-tasks=$ctrl.abortedTasks remove=$ctrl.removeTask(obj)></aborted-component><add-component create-task=$ctrl.createTask(task)></add-component>"),t.put("app/components/aborted/aborted.template.html",'<div class=item><h2>ABORTED</h2><div class=task ng-repeat="task in $ctrl.abortedTasks track by $index"><p class=aborted-text ng-class=task.priority>{{task.text}}</p><div class=time-box>{{task.date}}{{task.month}}{{task.year}} {{task.hours}}{{task.minutes}}{{task.seconds}}</div><div class="buttons delete"><button type=button class=remove-task ng-click=$ctrl.removeTask(task.id)>Remove</button></div></div></div>'),t.put("app/components/add/add.template.html",'<form action="" method=post class=add-task name=addTask><div class=button-add ng-click=$ctrl.showFieldInput()>CREATE NEW TASK</div><div class=field-input ng-class="{\'show\': $ctrl.show}"><div class=input-cover><textarea required class=input-new-task name=inputNewTask cols=30 rows=10 placeholder="Input new task" ng-model=addTask.task></textarea></div><div class=priority><p>Choose a priority of task</p><div class="priority-checkbox__cover clearfix"><div class="input-cover priority-checkbox"><label for=low><input id=low type=radio checked name=radioPriority value=low ng-init="addTask.radio.value = \'low\'" ng-model=addTask.radio.value> Low priority</label></div><div class="input-cover priority-checkbox"><label for=normal><input id=normal type=radio name=radioPriority value=normal ng-model=addTask.radio.value> Normal priority</label></div><div class="input-cover priority-checkbox"><label for=hight><input id=hight type=radio name=radioPriority value=hight ng-model=addTask.radio.value> Hight priority</label></div></div></div><div><button type=button class=button-for-add ng-class="{\'valid\': addTask.$valid}" ng-click=$ctrl.addTask(addTask)>ADD</button></div></div></form>'),t.put("app/components/doit/doit.template.html",'<div class=item><h2>DO IT</h2><div class=task ng-repeat="task in $ctrl.tasks track by $index"><form action=# name=oneTask{{task.id}}><textarea disabled ng-class=task.priority class=task-description name=oneTaskEditTask ng-model=task.text>{{task.text}}</textarea><div class=time-box>{{task.date}}{{task.month}}{{task.year}} {{task.hours}}{{task.minutes}}{{task.seconds}}</div><div class=buttons><a href=# class=edit ng-click=$ctrl.edit($event)>Edit</a> <button type=button class=save-edit ng-click="$ctrl.save($event, task); $ctrl.filter()">Save</button> <button type=button class=abort ng-click=$ctrl.aborted(task.id)>Abort</button> <button type=button class=move-in-progress ng-click=$ctrl.inProgress(task.id)>In progress</button></div><div class="edit-priority clearfix"><div class=low-label><input name=radioPriority{{task.id}} type=radio id=low{{task.id}} value=low ng-model=task.priority><label for=low{{task.id}}>Low</label></div><div class=normal-label><input name=radioPriority{{task.id}} type=radio id=normal{{task.id}} value=normal ng-model=task.priority><label for=normal{{task.id}}>Normal</label></div><div class=hight-label><input name=radioPriority{{task.id}} type=radio id=hight{{task.id}} value=hight ng-model=task.priority><label for=hight{{task.id}}>Hight</label></div></div></form></div></div>'),t.put("app/components/done/done.template.html",'<div class=item><h2>DONE</h2><div class=task ng-repeat="task in $ctrl.doneTasks track by $index"><p class=aborted-text ng-class=task.priority>{{task.text}}</p><div class=time-box>{{task.date}}{{task.month}}{{task.year}} {{task.hours}}{{task.minutes}}{{task.seconds}}</div><div class="buttons delete"><button type=button class=remove-task ng-click=$ctrl.removeTask(task.id)>Remove</button></div></div></div>'),t.put("app/components/inprogress/inprogress.template.html",'<div class=item><h2>IN PROGRESS</h2><div class=task ng-repeat="task in $ctrl.inProgress track by $index"><form action=# name=oneTask{{task.id}}><p ng-class=task.priority class=task-description>{{task.text}}</p><div class=time-box>{{task.date}}{{task.month}}{{task.year}} {{task.hours}}{{task.minutes}}{{task.seconds}}</div><div class=buttons><a href=# class=edit ng-click=$ctrl.edit($event)>Edit</a> <button type=button class=save-edit ng-click="$ctrl.save($event, task)">Save</button> <button type=button class=abort ng-click=$ctrl.aborted(task.id)>Abort</button> <button type=button class=move-done ng-click=$ctrl.done(task.id)>Done</button></div><div class="edit-priority clearfix"><div class=low-label><input name=radioPriority{{task.id}} type=radio id=low{{task.id}} value=low ng-model=task.priority><label for=low{{task.id}}>Low</label></div><div class=normal-label><input name=radioPriority{{task.id}} type=radio id=normal{{task.id}} value=normal ng-model=task.priority><label for=normal{{task.id}}>Normal</label></div><div class=hight-label><input name=radioPriority{{task.id}} type=radio id=hight{{task.id}} value=hight ng-model=task.priority><label for=hight{{task.id}}>Hight</label></div></div></form></div></div>')}]);
//# sourceMappingURL=../maps/scripts/app-f0cb0f7927.js.map
